
package paquetes;

import conexion.conectar;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



public class tipousuario extends javax.swing.JInternalFrame {

   ResultSet rs;
    DefaultTableModel modelo;
    
    public tipousuario() {
        initComponents();
        tipousuario();
    }
    
    void tipousuario(){
   String [] titulos= {"ID","TIPO USUARIO"};
   modelo=new  DefaultTableModel(null,titulos)
   {
   
       public boolean isCellEditable(int row, int column){
              return false; 
                }
   
   };  
 
   String datos []= new String[2];
   String sql="SELECT * FROM tipousuario"; 
        try {
            Statement st = cn.createStatement();
             rs = st.executeQuery(sql);
            while(rs.next())
            {
                datos[0]=rs.getString("idtipousuario");
                datos[1]=rs.getString("descripcion");
               
                
                modelo.addRow(datos);

            }
            tabla2.setModel(modelo);
            tabla2.getColumnModel().getColumn(0).setMaxWidth(0);
             tabla2.getColumnModel().getColumn(0).setMinWidth(0);
             tabla2.getColumnModel().getColumn(0).setPreferredWidth(0);
             
        } catch (SQLException ex) {
//            Logger.getLogger(nusuario.class.getName()).log(Level.SEVERE, null, ex);
        }
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txttu = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();

        setClosable(true);
        setTitle("TIPO DE USUARIOS");

        jLabel1.setText("Tipo de Usuario");

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla2.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttu, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txttu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 

    
    String tipoDeUsuario = txttu.getText();
    
    if (tipoDeUsuario.trim().equals("")) {
        JOptionPane.showMessageDialog(
         null, "No se puede dejar espacio en blanco", "Error al cargar tipo de usuario",JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    String ins="INSERT INTO tipousuario (descripcion) VALUES(?)";

    try {
        java.sql.PreparedStatement pst = cn.prepareStatement(ins);
        pst.setString(1, tipoDeUsuario);
        
        int n= pst.executeUpdate();
        if (n>0) {
            JOptionPane.showMessageDialog(this, "Tipo de Usuario Ingresado Correctamente");
            tipousuario();
            txttu.setText(null);    
        } else {
            JOptionPane.showMessageDialog(this, "Error");
        }      
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, ex);
    }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla2;
    public static javax.swing.JTextField txttu;
    // End of variables declaration//GEN-END:variables

conectar cc=new conectar();
   Connection cn=cc.conexion();
}
